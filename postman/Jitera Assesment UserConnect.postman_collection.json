{
	"info": {
		"_postman_id": "d99ffd99-f998-447a-b36d-2d3b0f6bfe0b",
		"name": "Jitera Assesment UserConnect",
		"description": "User connect by follow or unfollow.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25794553"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\",  ()=>{",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "nayeemdev@yahoo.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Secret123@",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Both email and password is required."
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\",  ()=>{",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "default"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Md Nayeem Hossain",
									"type": "text"
								},
								{
									"key": "username",
									"value": "nayeemdev",
									"type": "text"
								},
								{
									"key": "email",
									"value": "nayeemdev@yahoo.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Secret123@",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "Secret123@",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "",
									"description": "Nullable value",
									"type": "text"
								},
								{
									"key": "website",
									"value": "",
									"description": "Nullable url field",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Without phone and website others are required and need to pass valid data."
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is ok\",  ()=>{",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token\", \"Bearer \"+jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/auth/refresh-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"description": "Simplete authentication with JWT(Bearer Token). After Login, Registration and Refresh token the access_token automatically set into env, so you dont need copy paste tha token anymore, Just login and check auth required urls."
		},
		{
			"name": "User",
			"item": [
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"description": "For getting list of users without any authentication."
		},
		{
			"name": "User Follow System",
			"item": [
				{
					"name": "Follow",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/2/follow",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"2",
								"follow"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfollow",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/2/unfollow",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"2",
								"unfollow"
							]
						}
					},
					"response": []
				},
				{
					"name": "Followers List",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user/followers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user",
								"followers"
							],
							"query": [
								{
									"key": "name",
									"value": "dr",
									"description": "Nullable, without name it will return all followers",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "User can Follow/Unfollow other user and can the his own follower list nad can search by name."
		}
	]
}